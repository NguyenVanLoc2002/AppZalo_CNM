{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport Toast from \"react-native-toast-message\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar axiosInstance = axios.create({\n  baseURL: config.baseURL\n});\naxiosInstance.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    var token = yield AsyncStorage.getItem(\"accessToken\");\n    console.log(token);\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref2 = _asyncToGenerator(function* (error) {\n    var originalRequest = error.config;\n    var reqURL = originalRequest.url;\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\n      try {\n        var refreshToken = yield AsyncStorage.getItem(\"refreshToken\");\n        if (!refreshToken) {\n          Toast.show({\n            type: \"error\",\n            text1: \"Your session has expired. Please login again.\"\n          });\n          throw new Error(\"No refresh token available.\");\n        }\n        var refreshedTokenResponse = yield axiosInstance.post(\"/auth/refreshToken\", {\n          refreshToken: refreshToken\n        });\n        var newAccessToken = refreshedTokenResponse.data.newAccessToken;\n        yield AsyncStorage.setItem(\"accessToken\", JSON.stringify(newAccessToken));\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed:\", refreshError);\n        Toast.show({\n          type: \"error\",\n          text1: \"Your session has expired. Please login again.\"\n        });\n        yield AsyncStorage.clear();\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","Toast","AsyncStorage","axiosInstance","create","baseURL","interceptors","request","use","_ref","_asyncToGenerator","token","getItem","console","log","headers","Authorization","_x","apply","arguments","error","Promise","reject","response","_ref2","originalRequest","reqURL","url","status","includes","refreshToken","show","type","text1","Error","refreshedTokenResponse","post","newAccessToken","data","setItem","JSON","stringify","refreshError","clear","_x2"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  async (config) => {\r\n    const token = await AsyncStorage.getItem(\"accessToken\");\r\n    console.log(token);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    const reqURL = originalRequest.url;\r\n\r\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\r\n      try {\r\n        const refreshToken = await AsyncStorage.getItem(\"refreshToken\");\r\n        if (!refreshToken) {\r\n          Toast.show({\r\n            type: \"error\",\r\n            text1: \"Your session has expired. Please login again.\",\r\n          });\r\n          throw new Error(\"No refresh token available.\");\r\n        }\r\n\r\n        const refreshedTokenResponse = await axiosInstance.post(\r\n          \"/auth/refreshToken\",\r\n          {\r\n            refreshToken: refreshToken,\r\n          }\r\n        );\r\n        const newAccessToken = refreshedTokenResponse.data.newAccessToken;\r\n        await AsyncStorage.setItem(\r\n          \"accessToken\",\r\n          JSON.stringify(newAccessToken)\r\n        );\r\n\r\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n        return axiosInstance(originalRequest);\r\n      } catch (refreshError) {\r\n        console.error(\"Refresh token failed:\", refreshError);\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Your session has expired. Please login again.\",\r\n        });\r\n        await AsyncStorage.clear();\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AACb,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACjCC,OAAO,EAAEL,MAAM,CAACK;AAClB,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CACpC,WAAOV,MAAM,EAAK;IAChB,IAAMW,KAAK,SAAST,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;IACvDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClB,IAAIA,KAAK,EAAE;MACTX,MAAM,CAACe,OAAO,CAACC,aAAa,GAAI,UAASL,KAAM,EAAC;IAClD;IACA,OAAOX,MAAM;EACf,CAAC;EAAA,iBAAAiB,EAAA;IAAA,OAAAR,IAAA,CAAAS,KAAA,OAAAC,SAAA;EAAA;AAAA,KACD,UAACC,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDjB,aAAa,CAACG,YAAY,CAACiB,QAAQ,CAACf,GAAG,CACrC,UAACe,QAAQ,EAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC;EAAA,IAAAC,KAAA,GAAAd,iBAAA,CACD,WAAOU,KAAK,EAAK;IACf,IAAMK,eAAe,GAAGL,KAAK,CAACpB,MAAM;IACpC,IAAM0B,MAAM,GAAGD,eAAe,CAACE,GAAG;IAElC,IAAIP,KAAK,CAACG,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;MACpE,IAAI;QACF,IAAMC,YAAY,SAAS5B,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC;QAC/D,IAAI,CAACkB,YAAY,EAAE;UACjB7B,KAAK,CAAC8B,IAAI,CAAC;YACTC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAE;UACT,CAAC,CAAC;UACF,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,IAAMC,sBAAsB,SAAShC,aAAa,CAACiC,IAAI,CACrD,oBAAoB,EACpB;UACEN,YAAY,EAAEA;QAChB,CACF,CAAC;QACD,IAAMO,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAACD,cAAc;QACjE,MAAMnC,YAAY,CAACqC,OAAO,CACxB,aAAa,EACbC,IAAI,CAACC,SAAS,CAACJ,cAAc,CAC/B,CAAC;QAEDZ,eAAe,CAACV,OAAO,CAACC,aAAa,GAAI,UAASqB,cAAe,EAAC;QAClE,OAAOlC,aAAa,CAACsB,eAAe,CAAC;MACvC,CAAC,CAAC,OAAOiB,YAAY,EAAE;QACrB7B,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEsB,YAAY,CAAC;QACpDzC,KAAK,CAAC8B,IAAI,CAAC;UACTC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;QACT,CAAC,CAAC;QACF,MAAM/B,YAAY,CAACyC,KAAK,CAAC,CAAC;QAC1B,OAAOtB,OAAO,CAACC,MAAM,CAACoB,YAAY,CAAC;MACrC;IACF;IACA,OAAOrB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAwB,GAAA;IAAA,OAAApB,KAAA,CAAAN,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAehB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}