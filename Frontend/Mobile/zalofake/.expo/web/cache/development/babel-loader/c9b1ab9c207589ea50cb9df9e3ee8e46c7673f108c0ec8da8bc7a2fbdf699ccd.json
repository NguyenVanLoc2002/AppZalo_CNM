{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport toast from \"react-hot-toast\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar useUpdate = function useUpdate() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useAuthContext = useAuthContext(),\n    setAuthUser = _useAuthContext.setAuthUser;\n  var updateAvatar = function () {\n    var _ref = _asyncToGenerator(function* (file, authToken) {\n      setLoading(true);\n      try {\n        if (!authToken) {\n          throw new Error(\"Authentication token not found\");\n        }\n        var formData = new FormData();\n        formData.append(\"avatar\", file);\n        var response = yield axiosInstance.post(\"/users/upload-avatar\", formData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        var data = response.data,\n          status = response.status;\n        if (status === 200) {\n          var avatar = data.avatar;\n          if (avatar) {\n            yield AsyncStorage.setItem(\"avatar\", avatar);\n            toast.success(\"Avatar updated successfully\");\n          } else {\n            throw new Error(\"Failed to update avatar\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update avatar\");\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message || \"Failed to update avatar! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateAvatar(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateBackground = function () {\n    var _ref2 = _asyncToGenerator(function* (file, authToken) {\n      setLoading(true);\n      try {\n        if (!authToken) {\n          throw new Error(\"Authentication token not found\");\n        }\n        var formData = new FormData();\n        formData.append(\"background\", file);\n        var response = yield axiosInstance.post(\"/users/upload-background\", formData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        var data = response.data,\n          status = response.status;\n        if (status === 200) {\n          var background = data.background;\n          if (background) {\n            yield AsyncStorage.setItem(\"background\", background);\n            toast.success(\"Background updated successfully\");\n          } else {\n            throw new Error(\"Failed to update background\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update background\");\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message || \"Failed to update background! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateBackground(_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref3 = _asyncToGenerator(function* (userData) {\n      setLoading(true);\n      try {\n        var response = yield axiosInstance.post(\"/users/update-profile\", userData);\n        var data = response.data,\n          status = response.status;\n        if (status === 200) {\n          var user = data.user;\n          if (user) {\n            yield AsyncStorage.setItem(\"user\", JSON.stringify(user));\n            setAuthUser(user);\n            toast.success(\"Profile updated successfully\");\n          } else {\n            throw new Error(\"Failed to update profile\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update profile\");\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error(error.response.data.message || \"Failed to update profile! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateProfile(_x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    updateAvatar: updateAvatar,\n    updateBackground: updateBackground,\n    updateProfile: updateProfile,\n    loading: loading\n  };\n};\nexport default useUpdate;","map":{"version":3,"names":["useState","useAuthContext","toast","axiosInstance","AsyncStorage","useUpdate","_useState","_useState2","_slicedToArray","loading","setLoading","_useAuthContext","setAuthUser","updateAvatar","_ref","_asyncToGenerator","file","authToken","Error","formData","FormData","append","response","post","headers","Authorization","data","status","avatar","setItem","success","message","error","console","_x","_x2","apply","arguments","updateBackground","_ref2","background","_x3","_x4","updateProfile","_ref3","userData","user","JSON","stringify","_x5"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useUpdate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../contexts/AuthContext\";\r\nimport toast from \"react-hot-toast\";\r\nimport axiosInstance from \"../api/axiosInstance\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst useUpdate = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { setAuthUser } = useAuthContext();\r\n\r\n  const updateAvatar = async (file, authToken) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!authToken) {\r\n        throw new Error(\"Authentication token not found\");\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"avatar\", file);\r\n\r\n      const response = await axiosInstance.post(\r\n        \"/users/upload-avatar\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { avatar } = data;\r\n        if (avatar) {\r\n          // Lưu trữ thông tin avatar vào AsyncStorage\r\n          await AsyncStorage.setItem(\"avatar\", avatar);\r\n          toast.success(\"Avatar updated successfully\");\r\n        } else {\r\n          throw new Error(\"Failed to update avatar\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update avatar\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\r\n        error.message || \"Failed to update avatar! Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateBackground = async (file, authToken) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!authToken) {\r\n        throw new Error(\"Authentication token not found\");\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"background\", file);\r\n\r\n      const response = await axiosInstance.post(\r\n        \"/users/upload-background\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { background } = data;\r\n        if (background) {\r\n          // Lưu trữ thông tin background vào AsyncStorage\r\n          await AsyncStorage.setItem(\"background\", background);\r\n          toast.success(\"Background updated successfully\");\r\n        } else {\r\n          throw new Error(\"Failed to update background\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update background\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\r\n        error.message || \"Failed to update background! Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        \"/users/update-profile\",\r\n        userData\r\n      );\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { user } = data;\r\n        if (user) {\r\n          // Lưu trữ thông tin user vào AsyncStorage\r\n          await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n          setAuthUser(user);\r\n          toast.success(\"Profile updated successfully\");\r\n        } else {\r\n          throw new Error(\"Failed to update profile\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\r\n        error.response.data.message ||\r\n          \"Failed to update profile! Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { updateAvatar, updateBackground, updateProfile, loading };\r\n};\r\n\r\nexport default useUpdate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}