{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar axiosInstance = axios.create({\n  baseURL: config.baseURL\n});\naxiosInstance.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    try {\n      var token = yield AsyncStorage.getItem(\"accessToken\");\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref2 = _asyncToGenerator(function* (error) {\n    var originalRequest = error.config;\n    var reqURL = originalRequest.url;\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\n      try {\n        var refreshToken = yield AsyncStorage.getItem(\"refreshToken\");\n        if (!refreshToken) {\n          toast.error(\"Your session has expired. Please login again.\");\n          throw new Error(\"No refresh token available.\");\n        }\n        var refreshedTokenResponse = yield axiosInstance.post(\"/auth/refreshToken\", {\n          refreshToken: refreshToken\n        });\n        var newAccessToken = refreshedTokenResponse.data.newAccessToken;\n        yield AsyncStorage.setItem(\"accessToken\", newAccessToken);\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed:\", refreshError);\n        toast.error(\"Your session has expired. Please login again.\");\n        yield AsyncStorage.clear();\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","AsyncStorage","axiosInstance","create","baseURL","interceptors","request","use","_ref","_asyncToGenerator","token","getItem","headers","Authorization","error","Promise","reject","_x","apply","arguments","response","_ref2","originalRequest","reqURL","url","status","includes","refreshToken","toast","Error","refreshedTokenResponse","post","newAccessToken","data","setItem","refreshError","console","clear","_x2"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config\";\r\nimport { AsyncStorage } from \"react-native\"; // Sử dụng AsyncStorage từ 'react-native'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  async (config) => {\r\n    try {\r\n      const token = await AsyncStorage.getItem(\"accessToken\"); // Sử dụng AsyncStorage từ 'react-native'\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    const reqURL = originalRequest.url;\r\n\r\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\r\n      try {\r\n        const refreshToken = await AsyncStorage.getItem(\"refreshToken\"); // Sử dụng AsyncStorage từ 'react-native'\r\n        if (!refreshToken) {\r\n          toast.error(\"Your session has expired. Please login again.\");\r\n          throw new Error(\"No refresh token available.\");\r\n        }\r\n\r\n        const refreshedTokenResponse = await axiosInstance.post(\r\n          \"/auth/refreshToken\",\r\n          {\r\n            refreshToken: refreshToken,\r\n          }\r\n        );\r\n        const newAccessToken = refreshedTokenResponse.data.newAccessToken;\r\n        await AsyncStorage.setItem(\"accessToken\", newAccessToken); // Sử dụng AsyncStorage từ 'react-native'\r\n\r\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n        return axiosInstance(originalRequest);\r\n      } catch (refreshError) {\r\n        console.error(\"Refresh token failed:\", refreshError);\r\n        toast.error(\"Your session has expired. Please login again.\");\r\n        await AsyncStorage.clear(); // Sử dụng AsyncStorage từ 'react-native'\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AAAiB,SACrBC,YAAY;AAErB,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEJ,MAAM,CAACI;AAClB,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CACpC,WAAOT,MAAM,EAAK;IAChB,IAAI;MACF,IAAMU,KAAK,SAAST,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;MACvD,IAAID,KAAK,EAAE;QACTV,MAAM,CAACY,OAAO,CAACC,aAAa,GAAI,UAASH,KAAM,EAAC;MAClD;MACA,OAAOV,MAAM;IACf,CAAC,CAAC,OAAOc,KAAK,EAAE;MACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;EACF,CAAC;EAAA,iBAAAG,EAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,KACD,UAACL,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,aAAa,CAACG,YAAY,CAACe,QAAQ,CAACb,GAAG,CACrC,UAACa,QAAQ,EAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC;EAAA,IAAAC,KAAA,GAAAZ,iBAAA,CACD,WAAOK,KAAK,EAAK;IACf,IAAMQ,eAAe,GAAGR,KAAK,CAACd,MAAM;IACpC,IAAMuB,MAAM,GAAGD,eAAe,CAACE,GAAG;IAElC,IAAIV,KAAK,CAACM,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;MACpE,IAAI;QACF,IAAMC,YAAY,SAAS1B,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC;QAC/D,IAAI,CAACgB,YAAY,EAAE;UACjBC,KAAK,CAACd,KAAK,CAAC,+CAA+C,CAAC;UAC5D,MAAM,IAAIe,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,IAAMC,sBAAsB,SAAS5B,aAAa,CAAC6B,IAAI,CACrD,oBAAoB,EACpB;UACEJ,YAAY,EAAEA;QAChB,CACF,CAAC;QACD,IAAMK,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAACD,cAAc;QACjE,MAAM/B,YAAY,CAACiC,OAAO,CAAC,aAAa,EAAEF,cAAc,CAAC;QAEzDV,eAAe,CAACV,OAAO,CAACC,aAAa,GAAI,UAASmB,cAAe,EAAC;QAClE,OAAO9B,aAAa,CAACoB,eAAe,CAAC;MACvC,CAAC,CAAC,OAAOa,YAAY,EAAE;QACrBC,OAAO,CAACtB,KAAK,CAAC,uBAAuB,EAAEqB,YAAY,CAAC;QACpDP,KAAK,CAACd,KAAK,CAAC,+CAA+C,CAAC;QAC5D,MAAMb,YAAY,CAACoC,KAAK,CAAC,CAAC;QAC1B,OAAOtB,OAAO,CAACC,MAAM,CAACmB,YAAY,CAAC;MACrC;IACF;IACA,OAAOpB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAwB,GAAA;IAAA,OAAAjB,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAejB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}