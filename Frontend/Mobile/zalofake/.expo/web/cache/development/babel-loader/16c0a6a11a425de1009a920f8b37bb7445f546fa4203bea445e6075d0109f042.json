{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar useUpdate = function useUpdate() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useAuthContext = useAuthContext(),\n    setAuthUser = _useAuthContext.setAuthUser;\n  var updateAvatar = function () {\n    var _ref = _asyncToGenerator(function* (formData) {\n      setLoading(true);\n      console.log(formData);\n      try {\n        var _formData = new FormData();\n        _formData.append(\"avatar\", file);\n        var response = yield axiosInstance.post(\"/users/upload-avatar\", _formData);\n        console.log(response);\n      } catch (error) {\n        console.error(error);\n        Alert.alert(\"Error\", error.message || \"Failed to update avatar! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateAvatar(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateBackground = function () {\n    var _ref2 = _asyncToGenerator(function* (file, authToken) {\n      setLoading(true);\n      try {\n        if (!authToken) {\n          throw new Error(\"Authentication token not found\");\n        }\n        var formData = new FormData();\n        formData.append(\"background\", file);\n        var response = yield axiosInstance.post(\"/users/upload-background\", formData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        var data = response.data,\n          status = response.status;\n        if (status === 200) {\n          var background = data.background;\n          if (background) {\n            yield AsyncStorage.setItem(\"background\", background);\n            Alert.alert(\"Success\", \"Background updated successfully\");\n          } else {\n            throw new Error(\"Failed to update background\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update background\");\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert(\"Error\", error.message || \"Failed to update background! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateBackground(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref3 = _asyncToGenerator(function* (name, email, gender, dob) {\n      setLoading(true);\n      try {\n        console.log(name, email, gender, dob);\n        var response = yield axiosInstance.post(\"/users/update-profile\", {\n          name: name,\n          email: email,\n          gender: gender,\n          dob: dob\n        });\n        var data = response.data,\n          status = response.status;\n        if (status === 200) {\n          var user = data.user;\n          if (user) {\n            yield AsyncStorage.setItem(\"user\", JSON.stringify(user));\n            setAuthUser(user);\n            Alert.alert(\"Success\", \"Profile updated successfully\");\n          } else {\n            throw new Error(\"Failed to update profile\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update profile\");\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error(\"error: \", error);\n        Alert.alert(\"Error\", ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || \"Failed to update profile! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateProfile(_x4, _x5, _x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    updateProfile: updateProfile,\n    updateAvatar: updateAvatar,\n    loading: loading\n  };\n};\nexport default useUpdate;","map":{"version":3,"names":["useState","useAuthContext","Alert","axiosInstance","AsyncStorage","useUpdate","_useState","_useState2","_slicedToArray","loading","setLoading","_useAuthContext","setAuthUser","updateAvatar","_ref","_asyncToGenerator","formData","console","log","FormData","append","file","response","post","error","alert","message","_x","apply","arguments","updateBackground","_ref2","authToken","Error","headers","Authorization","data","status","background","setItem","_x2","_x3","updateProfile","_ref3","name","email","gender","dob","user","JSON","stringify","_error$response","_error$response$data","_x4","_x5","_x6","_x7"],"sources":["D:/NodeJS/ZaloFake/Frontend/Mobile/zalofake/src/hooks/useUpdate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../contexts/AuthContext\";\r\nimport { Alert } from \"react-native\";\r\nimport axiosInstance from \"../api/axiosInstance\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst useUpdate = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { setAuthUser } = useAuthContext();\r\n  const updateAvatar = async (formData) => {\r\n    setLoading(true);\r\n    console.log(formData);\r\n    try {\r\n      // if (!authToken) {\r\n      //   throw new Error(\"Authentication token not found\");\r\n      // }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"avatar\", file);\r\n\r\n      const response = await axiosInstance.post(\r\n        \"/users/upload-avatar\",\r\n        formData\r\n        // {\r\n        //   headers: {\r\n        //     Authorization: `Bearer ${authToken}`,\r\n        //     \"Content-Type\": \"multipart/form-data\",\r\n        //   },\r\n        // }\r\n      );\r\n      console.log(response);\r\n      // const { data, status } = response;\r\n\r\n      // if (status === 200) {\r\n      //   const { avatar } = data;\r\n      //   if (avatar) {\r\n      //     // Lưu trữ thông tin avatar vào AsyncStorage\r\n      //     await AsyncStorage.setItem(\"avatar\", avatar);\r\n      //     Alert.alert(\"Success\", \"Avatar updated successfully\"); // Sửa: Sử dụng Alert thay vì toast\r\n      //   } else {\r\n      //     throw new Error(\"Failed to update avatar\");\r\n      //   }\r\n      // } else {\r\n      //   throw new Error(data.message || \"Failed to update avatar\");\r\n      // }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\r\n        \"Error\",\r\n        error.message || \"Failed to update avatar! Please try again.\"\r\n      ); // Sửa: Sử dụng Alert thay vì toast\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateBackground = async (file, authToken) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!authToken) {\r\n        throw new Error(\"Authentication token not found\");\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"background\", file);\r\n\r\n      const response = await axiosInstance.post(\r\n        \"/users/upload-background\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { background } = data;\r\n        if (background) {\r\n          // Lưu trữ thông tin background vào AsyncStorage\r\n          await AsyncStorage.setItem(\"background\", background);\r\n          Alert.alert(\"Success\", \"Background updated successfully\"); // Sửa: Sử dụng Alert thay vì toast\r\n        } else {\r\n          throw new Error(\"Failed to update background\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update background\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\r\n        \"Error\",\r\n        error.message || \"Failed to update background! Please try again.\"\r\n      ); // Sửa: Sử dụng Alert thay vì toast\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (name, email, gender, dob) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(name, email, gender, dob);\r\n      const response = await axiosInstance.post(\"/users/update-profile\", {\r\n        name,\r\n        email,\r\n        gender,\r\n        dob,\r\n      });\r\n\r\n      const { data, status } = response;\r\n\r\n      if (status === 200) {\r\n        const { user } = data;\r\n        if (user) {\r\n          await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n          setAuthUser(user);\r\n          Alert.alert(\"Success\", \"Profile updated successfully\");\r\n        } else {\r\n          throw new Error(\"Failed to update profile\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error: \", error);\r\n      Alert.alert(\r\n        \"Error\",\r\n        error.response?.data?.message ||\r\n          \"Failed to update profile! Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { updateProfile, updateAvatar, loading };\r\n};\r\n\r\nexport default useUpdate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}