{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport toast from \"react-hot-toast\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar axiosInstance = axios.create({\n  baseURL: config.baseURL\n});\naxiosInstance.interceptors.request.use(function (config) {\n  var token = JSON.parse(AsyncStorage.getItem(\"accessToken\"));\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref = _asyncToGenerator(function* (error) {\n    var originalRequest = error.config;\n    if (error.response.status === 401) {\n      try {\n        var refreshToken = JSON.parse(AsyncStorage.getItem(\"refreshToken\"));\n        if (!refreshToken) {\n          toast.error(\"Your session has expired. Please login again.\");\n          throw new Error(\"No refresh token available.\");\n        }\n        var refreshedTokenResponse = yield axiosInstance.post(\"/auth/refreshToken\", {\n          refreshToken: refreshToken\n        });\n        var newAccessToken = refreshedTokenResponse.data.newAccessToken;\n        AsyncStorage.setItem(\"accessToken\", JSON.stringify(newAccessToken));\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed:\", refreshError);\n        toast.error(\"Your session has expired. Please login again.\");\n        localStorage.clear();\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","toast","AsyncStorage","axiosInstance","create","baseURL","interceptors","request","use","token","JSON","parse","getItem","headers","Authorization","error","Promise","reject","response","_ref","_asyncToGenerator","originalRequest","status","refreshToken","Error","refreshedTokenResponse","post","newAccessToken","data","setItem","stringify","refreshError","console","localStorage","clear","window","location","href","_x","apply","arguments"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config\";\r\nimport toast from \"react-hot-toast\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = JSON.parse(AsyncStorage.getItem(\"accessToken\"));\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response.status === 401) {\r\n      try {\r\n        const refreshToken = JSON.parse(AsyncStorage.getItem(\"refreshToken\"));\r\n        if (!refreshToken) {\r\n          toast.error(\"Your session has expired. Please login again.\");\r\n          throw new Error(\"No refresh token available.\");\r\n        }\r\n\r\n        const refreshedTokenResponse = await axiosInstance.post(\r\n          \"/auth/refreshToken\",\r\n          {\r\n            refreshToken: refreshToken,\r\n          }\r\n        );\r\n        const newAccessToken = refreshedTokenResponse.data.newAccessToken;\r\n        AsyncStorage.setItem(\"accessToken\", JSON.stringify(newAccessToken));\r\n\r\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n        return axiosInstance(originalRequest);\r\n      } catch (refreshError) {\r\n        console.error(\"Refresh token failed:\", refreshError);\r\n        toast.error(\"Your session has expired. Please login again.\");\r\n        localStorage.clear();\r\n        window.location.href = \"/login\";\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AACb,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACjCC,OAAO,EAAEL,MAAM,CAACK;AAClB,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpC,UAACR,MAAM,EAAK;EACV,IAAMS,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC,CAAC;EAC7D,IAAIH,KAAK,EAAE;IACTT,MAAM,CAACa,OAAO,CAACC,aAAa,GAAI,UAASL,KAAM,EAAC;EAClD;EACA,OAAOT,MAAM;AACf,CAAC,EACD,UAACe,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,aAAa,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CACrC,UAACU,QAAQ,EAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CACD,WAAOL,KAAK,EAAK;IACf,IAAMM,eAAe,GAAGN,KAAK,CAACf,MAAM;IAEpC,IAAIe,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACjC,IAAI;QACF,IAAMC,YAAY,GAAGb,IAAI,CAACC,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC,CAAC;QACrE,IAAI,CAACW,YAAY,EAAE;UACjBtB,KAAK,CAACc,KAAK,CAAC,+CAA+C,CAAC;UAC5D,MAAM,IAAIS,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,IAAMC,sBAAsB,SAAStB,aAAa,CAACuB,IAAI,CACrD,oBAAoB,EACpB;UACEH,YAAY,EAAEA;QAChB,CACF,CAAC;QACD,IAAMI,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAACD,cAAc;QACjEzB,YAAY,CAAC2B,OAAO,CAAC,aAAa,EAAEnB,IAAI,CAACoB,SAAS,CAACH,cAAc,CAAC,CAAC;QAEnEN,eAAe,CAACR,OAAO,CAACC,aAAa,GAAI,UAASa,cAAe,EAAC;QAClE,OAAOxB,aAAa,CAACkB,eAAe,CAAC;MACvC,CAAC,CAAC,OAAOU,YAAY,EAAE;QACrBC,OAAO,CAACjB,KAAK,CAAC,uBAAuB,EAAEgB,YAAY,CAAC;QACpD9B,KAAK,CAACc,KAAK,CAAC,+CAA+C,CAAC;QAC5DkB,YAAY,CAACC,KAAK,CAAC,CAAC;QACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B,OAAOrB,OAAO,CAACC,MAAM,CAACc,YAAY,CAAC;MACrC;IACF;IACA,OAAOf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAuB,EAAA;IAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAerC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}