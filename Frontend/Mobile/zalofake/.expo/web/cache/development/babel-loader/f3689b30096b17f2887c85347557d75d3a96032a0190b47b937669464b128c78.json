{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport toast from \"react-hot-toast\";\nvar axiosInstance = axios.create({\n  baseURL: config.baseURL\n});\naxiosInstance.interceptors.request.use(function (config) {\n  var token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref = _asyncToGenerator(function* (error) {\n    var originalRequest = error.config;\n    var reqURL = originalRequest.url;\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\n      try {\n        var refreshToken = localStorage.getItem(\"refreshToken\");\n        if (!refreshToken) {\n          toast.error(\"Your session has expired. Please login again.\");\n          throw new Error(\"No refresh token available.\");\n        }\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed:\", refreshError);\n        toast.error(\"Your session has expired. Please login again.\");\n        localStorage.clear();\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","toast","axiosInstance","create","baseURL","interceptors","request","use","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_ref","_asyncToGenerator","originalRequest","reqURL","url","status","includes","refreshToken","Error","refreshError","console","clear","_x","apply","arguments"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\"); // Sử dụng localStorage thay vì AsyncStorage\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    const reqURL = originalRequest.url;\r\n\r\n    if (error.response.status === 401 && !reqURL.includes(\"/auth/login\")) {\r\n      try {\r\n        const refreshToken = localStorage.getItem(\"refreshToken\"); // Sử dụng localStorage thay vì AsyncStorage\r\n        if (!refreshToken) {\r\n          toast.error(\"Your session has expired. Please login again.\");\r\n          throw new Error(\"No refresh token available.\");\r\n        }\r\n\r\n        // Thực hiện logic refresh token ở đây\r\n\r\n        return axiosInstance(originalRequest);\r\n      } catch (refreshError) {\r\n        console.error(\"Refresh token failed:\", refreshError);\r\n        toast.error(\"Your session has expired. Please login again.\");\r\n        localStorage.clear(); // Sử dụng localStorage.clear() thay vì AsyncStorage.clear()\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AACb,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEJ,MAAM,CAACI;AAClB,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpC,UAACP,MAAM,EAAK;EACV,IAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTR,MAAM,CAACW,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAClD;EACA,OAAOR,MAAM;AACf,CAAC,EACD,UAACa,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDX,aAAa,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CACrC,UAACS,QAAQ,EAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CACD,WAAOL,KAAK,EAAK;IACf,IAAMM,eAAe,GAAGN,KAAK,CAACb,MAAM;IACpC,IAAMoB,MAAM,GAAGD,eAAe,CAACE,GAAG;IAElC,IAAIR,KAAK,CAACG,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;MACpE,IAAI;QACF,IAAMC,YAAY,GAAGf,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QACzD,IAAI,CAACc,YAAY,EAAE;UACjBvB,KAAK,CAACY,KAAK,CAAC,+CAA+C,CAAC;UAC5D,MAAM,IAAIY,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAIA,OAAOvB,aAAa,CAACiB,eAAe,CAAC;MACvC,CAAC,CAAC,OAAOO,YAAY,EAAE;QACrBC,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEa,YAAY,CAAC;QACpDzB,KAAK,CAACY,KAAK,CAAC,+CAA+C,CAAC;QAC5DJ,YAAY,CAACmB,KAAK,CAAC,CAAC;QACpB,OAAOd,OAAO,CAACC,MAAM,CAACW,YAAY,CAAC;MACrC;IACF;IACA,OAAOZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAgB,EAAA;IAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAe7B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}