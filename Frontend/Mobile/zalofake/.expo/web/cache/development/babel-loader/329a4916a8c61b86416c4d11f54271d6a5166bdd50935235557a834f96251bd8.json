{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar useUpdate = function useUpdate() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useAuthContext = useAuthContext(),\n    setAuthUser = _useAuthContext.setAuthUser;\n  var updateProfile = function () {\n    var _ref = _asyncToGenerator(function* (userData) {\n      setLoading(true);\n      try {\n        var response = yield axiosInstance.post(\"/users/update-profile\", userData);\n        var data = response.data,\n          status = response.status;\n        console.log();\n        console.log(data);\n        if (status === 200) {\n          var user = data.user;\n          if (user) {\n            yield AsyncStorage.setItem(\"user\", JSON.stringify(user));\n            setAuthUser(user);\n            Alert.alert(\"Success\", \"Profile updated successfully\");\n          } else {\n            throw new Error(\"Failed to update profile\");\n          }\n        } else {\n          throw new Error(data.message || \"Failed to update profile\");\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error(error);\n        Alert.alert(\"Error\", ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || \"Failed to update profile! Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateProfile(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return {\n    updateProfile: updateProfile\n  };\n};\nexport default useUpdate;","map":{"version":3,"names":["useState","useAuthContext","Alert","axiosInstance","AsyncStorage","useUpdate","_useState","_useState2","_slicedToArray","loading","setLoading","_useAuthContext","setAuthUser","updateProfile","_ref","_asyncToGenerator","userData","response","post","data","status","console","log","user","setItem","JSON","stringify","alert","Error","message","error","_error$response","_error$response$data","_x","apply","arguments"],"sources":["C:/Users/huynh/OneDrive/Desktop/ZaloFake/AppZalo_CNM/Frontend/Mobile/zalofake/src/hooks/useUpdate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../contexts/AuthContext\";\r\nimport { Alert } from \"react-native\"; // Sửa: Thay thế toast bằng Alert\r\nimport axiosInstance from \"../api/axiosInstance\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst useUpdate = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { setAuthUser } = useAuthContext();\r\n  // const updateAvatar = async (file, authToken) => {\r\n  //   setLoading(true);\r\n  //   try {\r\n  //     if (!authToken) {\r\n  //       throw new Error(\"Authentication token not found\");\r\n  //     }\r\n\r\n  //     const formData = new FormData();\r\n  //     formData.append(\"avatar\", file);\r\n\r\n  //     const response = await axiosInstance.post(\r\n  //       \"/users/upload-avatar\",\r\n  //       formData,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${authToken}`,\r\n  //           \"Content-Type\": \"multipart/form-data\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n\r\n  //     const { data, status } = response;\r\n\r\n  //     if (status === 200) {\r\n  //       const { avatar } = data;\r\n  //       if (avatar) {\r\n  //         // Lưu trữ thông tin avatar vào AsyncStorage\r\n  //         await AsyncStorage.setItem(\"avatar\", avatar);\r\n  //         Alert.alert(\"Success\", \"Avatar updated successfully\"); // Sửa: Sử dụng Alert thay vì toast\r\n  //       } else {\r\n  //         throw new Error(\"Failed to update avatar\");\r\n  //       }\r\n  //     } else {\r\n  //       throw new Error(data.message || \"Failed to update avatar\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     Alert.alert(\r\n  //       \"Error\",\r\n  //       error.message || \"Failed to update avatar! Please try again.\"\r\n  //     ); // Sửa: Sử dụng Alert thay vì toast\r\n  //   } finally {\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  // const updateBackground = async (file, authToken) => {\r\n  //   setLoading(true);\r\n  //   try {\r\n  //     if (!authToken) {\r\n  //       throw new Error(\"Authentication token not found\");\r\n  //     }\r\n\r\n  //     const formData = new FormData();\r\n  //     formData.append(\"background\", file);\r\n\r\n  //     const response = await axiosInstance.post(\r\n  //       \"/users/upload-background\",\r\n  //       formData,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${authToken}`,\r\n  //           \"Content-Type\": \"multipart/form-data\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n\r\n  //     const { data, status } = response;\r\n\r\n  //     if (status === 200) {\r\n  //       const { background } = data;\r\n  //       if (background) {\r\n  //         // Lưu trữ thông tin background vào AsyncStorage\r\n  //         await AsyncStorage.setItem(\"background\", background);\r\n  //         Alert.alert(\"Success\", \"Background updated successfully\"); // Sửa: Sử dụng Alert thay vì toast\r\n  //       } else {\r\n  //         throw new Error(\"Failed to update background\");\r\n  //       }\r\n  //     } else {\r\n  //       throw new Error(data.message || \"Failed to update background\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     Alert.alert(\r\n  //       \"Error\",\r\n  //       error.message || \"Failed to update background! Please try again.\"\r\n  //     ); // Sửa: Sử dụng Alert thay vì toast\r\n  //   } finally {\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        \"/users/update-profile\",\r\n        userData\r\n      );\r\n\r\n      const { data, status } = response;\r\n      console.log();\r\n\r\n      console.log(data);\r\n\r\n      if (status === 200) {\r\n        const { user } = data;\r\n        if (user) {\r\n          // Lưu trữ thông tin user vào AsyncStorage\r\n          await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n          setAuthUser(user);\r\n          Alert.alert(\"Success\", \"Profile updated successfully\"); // Sửa: Sử dụng Alert thay vì toast\r\n        } else {\r\n          throw new Error(\"Failed to update profile\");\r\n        }\r\n      } else {\r\n        throw new Error(data.message || \"Failed to update profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\r\n        \"Error\",\r\n        error.response?.data?.message ||\r\n          \"Failed to update profile! Please try again.\"\r\n      ); // Sửa: Sử dụng Alert thay vì toast\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { updateProfile };\r\n};\r\n\r\nexport default useUpdate;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc;AAAkC,OAAAC,KAAA;AAEzD,OAAOC,aAAa;AACpB,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAA8BN,QAAQ,CAAC,KAAK,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,eAAA,GAAwBV,cAAc,CAAC,CAAC;IAAhCW,WAAW,GAAAD,eAAA,CAAXC,WAAW;EA6FnB,IAAMC,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAK;MACxCN,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,IAAMO,QAAQ,SAASd,aAAa,CAACe,IAAI,CACvC,uBAAuB,EACvBF,QACF,CAAC;QAED,IAAQG,IAAI,GAAaF,QAAQ,CAAzBE,IAAI;UAAEC,MAAM,GAAKH,QAAQ,CAAnBG,MAAM;QACpBC,OAAO,CAACC,GAAG,CAAC,CAAC;QAEbD,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QAEjB,IAAIC,MAAM,KAAK,GAAG,EAAE;UAClB,IAAQG,IAAI,GAAKJ,IAAI,CAAbI,IAAI;UACZ,IAAIA,IAAI,EAAE;YAER,MAAMnB,YAAY,CAACoB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;YACxDX,WAAW,CAACW,IAAI,CAAC;YACjBrB,KAAK,CAACyB,KAAK,CAAC,SAAS,EAAE,8BAA8B,CAAC;UACxD,CAAC,MAAM;YACL,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;UAC7C;QACF,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAACT,IAAI,CAACU,OAAO,IAAI,0BAA0B,CAAC;QAC7D;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,oBAAA;QACdX,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;QACpB5B,KAAK,CAACyB,KAAK,CACT,OAAO,EACP,EAAAI,eAAA,GAAAD,KAAK,CAACb,QAAQ,sBAAAe,oBAAA,GAAdD,eAAA,CAAgBZ,IAAI,qBAApBa,oBAAA,CAAsBH,OAAO,KAC3B,6CACJ,CAAC;MACH,CAAC,SAAS;QACRnB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA,gBApCKG,aAAaA,CAAAoB,EAAA;MAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoClB;EAED,OAAO;IAAEtB,aAAa,EAAbA;EAAc,CAAC;AAC1B,CAAC;AAED,eAAeR,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}